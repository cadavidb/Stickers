{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","className","id","onSubmit","type","value","onChange","target","onClick","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAQxCC,EAAe,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKtB,OACI,oCACA,yBAAKO,UAAU,eACf,yBAAKC,GAAG,WACR,0BAAMC,SAAWR,GACb,+BAAMF,EAAN,KACA,2BACIW,KAAK,OACLC,MAAQZ,EACRa,SAvBc,SAAEV,GACxBF,EAAeE,EAAEW,OAAOF,YA4BxB,4BAAQG,QAASb,EAAcO,GAAG,QAAQD,UAAU,qCAApD,iB,uBCjCKQ,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHlB,GAAIkB,EAAIlB,GACRmB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAEjC,OACI,yBAAKX,UAAU,0CACX,yBAAKwB,IAAMb,EAAMc,IAAML,IACvB,+BAAMA,EAAN,OCFCM,EAAU,SAAC,GAAkB,IAAhBjB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNW,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENtB,EAAQC,GACHsB,MAAK,SAAAC,GAEFH,EAAS,CACLb,KAAMgB,EACNL,SAAS,SAItB,CAAClB,IAKGmB,EDnB0BK,CAAcxB,GAAlCY,EAFwB,EAE7BL,KAAaW,EAFgB,EAEhBA,QAErB,OACI,oCACI,wBAAI3B,UAAU,qCAAd,IAAqDS,EAArD,KAEEkB,GAAW,uBAAG3B,UAAU,oCAAb,WAEb,yBAAKA,UAAU,aAGPqB,EAAOH,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIe,IAAMf,EAAIlB,IACLkB,UElBpBgB,EAAe,SAAC,GAA8C,IAAD,IAA3CC,yBAA2C,MAAvB,CAAC,gBAAsB,IAGlC7C,mBAAU6C,GAHwB,mBAG/DC,EAH+D,KAGnD/C,EAHmD,KAKtE,OACI,oCACI,wBAAIU,UAAU,wCAAd,iBACA,kBAAC,EAAD,CAAaV,cAAgBA,IAC7B,6BAEA,4BAEQ+C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACIyB,IAAMzB,EACNA,SAAWA,U,MCbvC6B,IAASC,OAAQ,kBACb,EADa,MAEbC,SAASC,eAAe,U","file":"static/js/main.ce559fa9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <>\n        <div className=\"background\"></div>\n        <div id=\"entrada\">\n        <form onSubmit={ handleSubmit }>\n            <p> { inputValue } </p>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n      \n        </div>\n        \n        <button onClick={handleSubmit} id=\"boton\" className=\"animate__animated animate__shakeY\">Buscar Gifs</button>\n        </>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=20&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))\n                }\n            \n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            })\n\n    }, [category])\n\n\n\n\n    return state; // { data:[], loading: true };\n\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ({ defaultCategories = ['kermit memes'] }) => {\n    \n\n    const [categories, setCategories] = useState( defaultCategories );\n\n    return (\n        <>\n            <h2 className=\"animate__animated animate__heartBeat\">Gifs animados</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category  => (\n                        <GifGrid \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render( <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}